// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String
  password_hash String
  course        String?
  preferences   String[]

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  Message     Message[]
  UserGroups  UserGroups[]  @relation("UserGroupsUser")
  AdminGroups AdminGroups[] @relation("AdminGroupsUser")
  Groups      Groups[]
}

model Groups {
  id               Int           @id @default(autoincrement())
  title            String
  description      String
  Events           Events[]
  Message          Message[]
  adminCreatedUser User          @relation(fields: [adminCreateUserId], references: [id])
  UserGroups       UserGroups[]  @relation("UserGroupsGroup")
  AdminGroups      AdminGroups[] @relation("AdminGroupsGroup")
  adminCreateUserId           Int
}

model Events {
  id               Int    @id @default(autoincrement())
  title            String
  description      String
  place            String
  more             String
  dayOfTheWeekInit String
  dayOfTheWeekEnd  String
  hourInit         String
  hourEnd          String
  grupo            Groups @relation(fields: [groupsId], references: [id])
  groupsId         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  group     Groups   @relation(fields: [groupsId], references: [id])
  createdAt DateTime @default(now())
  userId    Int
  groupsId  Int
}

model UserGroups {
  id        Int      @id @default(autoincrement())
  user      User     @relation("UserGroupsUser", fields: [userId], references: [id])
  userId    Int
  groups    Groups   @relation("UserGroupsGroup", fields: [groupId], references: [id])
  groupId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user_groups")
}

model AdminGroups {
  id        Int      @id @default(autoincrement())
  admin     User     @relation("AdminGroupsUser", fields: [adminId], references: [id])
  adminId   Int
  groups    Groups   @relation("AdminGroupsGroup", fields: [groupId], references: [id])
  groupId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("admin_groups")
}
